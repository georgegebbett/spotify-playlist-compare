{"version":3,"sources":["components/LoginWithSpotify.js","views/login/Login.js","components/WebPlayback.jsx","views/playlistChoice/PlaylistChoice.js","components/playlistTable.js","views/comparison/Comparison.js","views/notFound/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["LoginWithSpotify","React","useState","loginUrl","setLoginUrl","useEffect","fetch","then","res","json","data","url","className","onClick","window","location","icon","faSpotify","Login","WebPlayback","props","undefined","setPlayer","token","script","document","createElement","src","async","body","appendChild","onSpotifyWebPlaybackSDKReady","player","Spotify","Player","name","getOAuthToken","cb","volume","addListener","device_id","console","log","spotify_uri","playerInstance","_options","access_token","method","JSON","stringify","context_uri","headers","play","uri","connect","PlaylistChoice","playlists","setPlaylists","p1","p2","selectedPlaylists","setSelectedPlaylists","compareEnabled","setCompareEnabled","spotifyToken","setSpotifyToken","navigate","useNavigate","getPlaylists","a","axios","get","getToken","Form","onSubmit","event","preventDefault","onChange","target","value","Table","striped","hover","bordered","map","playlist","year","FormCheck","type","id","Button","variant","disabled","PlaylistTable","playlistData","size","colSpan","tracks","track","inOtherList","index","artist","Comparison","useSearchParams","searchParams","playlist1","setPlaylist1","playlist2","setPlaylist2","stats","setStats","loading","setLoading","confetti","JSConfetti","getComparisonResult","addConfetti","confettiRadius","confettiNumber","sameSongs","NotFound","to","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96e60f5b.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faSpotify} from \"@fortawesome/free-brands-svg-icons\";\n\nimport React, {Fragment} from \"react\";\n\nimport \"./LoginWithSpotify.css\";\n\n\nexport default function LoginWithSpotify() {\n\n    const [loginUrl, setLoginUrl] = React.useState(\"\");\n\n    React.useEffect(() => {\n        fetch(\"/api/auth/getLoginUrl\")\n            .then((res) => res.json())\n            .then((data) => setLoginUrl(data.url));\n    }, []);\n\n    const handleClick = () => {\n        window.location = loginUrl;\n    }\n\n    return (\n        <Fragment>\n        <span className=\"spotifyButton\" onClick={handleClick}>\n            <FontAwesomeIcon icon={faSpotify}/>\n            {} Login with Spotify\n        </span>\n        </Fragment>\n    )\n}\n","import React from \"react\";\nimport LoginWithSpotify from \"../../components/LoginWithSpotify\";\n\nexport default function Login() {\n\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>How much did your taste change between your Spotify Wrappeds? ðŸ¤”</h1>\n                <br/>\n                <LoginWithSpotify/>\n            </header>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\n\nfunction WebPlayback(props) {\n\n    const [player, setPlayer] = useState(undefined);\n    const {token} = props;\n\n    useEffect(() => {\n\n        const script = document.createElement(\"script\");\n        script.src = \"https://sdk.scdn.co/spotify-player.js\";\n        script.async = true;\n\n        document.body.appendChild(script);\n\n        window.onSpotifyWebPlaybackSDKReady = () => {\n\n            const player = new window.Spotify.Player({\n                name: 'Wrapped Comparer',\n                getOAuthToken: cb => { cb(props.token); },\n                volume: 0.5\n            });\n\n            const play = ({\n                              spotify_uri,\n                              playerInstance: {\n                                  _options: {\n                                      getOAuthToken\n                                  }\n                              },\n                              device_id\n                          }) => {\n                getOAuthToken(access_token => {\n                    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${device_id}`, {\n                        method: 'PUT',\n                        body: JSON.stringify({context_uri: spotify_uri }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': `Bearer ${token}`\n                        },\n                    });\n                });\n            };\n\n            setPlayer(player);\n\n            player.addListener('ready', ({ device_id }) => {\n                console.log('Ready with Device ID', device_id);\n                play({\n                    playerInstance: player,\n                    spotify_uri: props.uri,\n                    device_id: device_id\n                });\n            });\n\n            player.addListener('not_ready', ({ device_id }) => {\n                console.log('Device ID has gone offline', device_id);\n            });\n\n\n            player.connect();\n\n        };\n    }, []);\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"main-wrapper\">\n\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default WebPlayback\n","import {Fragment, useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport Table from \"react-bootstrap/Table\";\nimport {Button, Form, FormCheck} from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport WebPlayback from \"../../components/WebPlayback\";\n\n\nexport default function PlaylistChoice() {\n\n    const [playlists, setPlaylists] = useState(undefined);\n    const [selectedPlaylists, setSelectedPlaylists] = useState({p1: \"\", p2: \"\"});\n    const [compareEnabled, setCompareEnabled] = useState(false);\n    const [spotifyToken, setSpotifyToken] = useState(undefined);\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        const getPlaylists = async () => {\n            const {data} = await axios.get('/api/app/userPlaylists');\n            console.log(data);\n            setPlaylists(data);\n        }\n\n        const getToken = async () => {\n            const {data} = await axios.get('/api/auth/spotifyToken');\n            console.log(data);\n            setSpotifyToken(data);\n        }\n\n        getPlaylists();\n        getToken();\n\n    }, []);\n\n    useEffect(() => {\n        if (selectedPlaylists.p1 === selectedPlaylists.p2 || selectedPlaylists.p1 === \"\" || selectedPlaylists.p2 === \"\") {\n            setCompareEnabled(false);\n        } else {\n            setCompareEnabled(true);\n        }\n    }, [selectedPlaylists])\n\n\n\n    const handleSubmit = (event) => {\n\n        event.preventDefault();\n        navigate(`/compare?p1=${selectedPlaylists.p1}&p2=${selectedPlaylists.p2}`);\n    }\n\n    const handleChange = (event) => {\n        setSelectedPlaylists({...selectedPlaylists, [event.target.name]: event.target.value})\n    }\n\n    return (\n        <Fragment>\n            {spotifyToken !== undefined && playlists !== undefined ? <WebPlayback token={spotifyToken} uri={playlists[0].uri}/> : null}\n            <div className=\"App\">\n                <p>\n                    The playlists are:\n                </p>\n                <br/>\n                <Form onSubmit={handleSubmit} onChange={handleChange}>\n                    <Table striped hover bordered>\n                        <thead>\n                            <tr>\n                                <td>Year</td>\n                                <td>Playlist</td>\n                                <td>Playlist 1</td>\n                                <td>Playlist 2</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                playlists ? playlists.map(playlist => {\n                                    return(\n                                        <tr key={playlist.id}>\n                                            <td>{playlist.year}</td>\n                                            <td>{playlist.name}</td>\n                                            <td><FormCheck type=\"radio\" name=\"p1\" value={playlist.id} /></td>\n                                            <td><FormCheck type=\"radio\" name=\"p2\" value={playlist.id} /></td>\n                                        </tr>\n                                    )\n                                }) : null\n                            }\n                        </tbody>\n                    </Table>\n                    <Button variant=\"primary\" type=\"submit\" disabled={!compareEnabled}>Compare!</Button>\n                </Form>\n            </div>\n        </Fragment>\n    )\n\n\n}\n","import {Fragment} from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\nexport function PlaylistTable(props) {\n    const {playlistData} = props;\n\n    return (\n        <Fragment>\n            <Table striped hover bordered size=\"sm\" className=\"playlist-table\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"3\">{playlistData.name}</th>\n                    </tr>\n                    <tr>\n                        <th>#</th>\n                        <th>Track name</th>\n                        <th>Artist</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        playlistData ?\n                            playlistData.tracks.map(track => {\n                                return (\n                                    <tr key={track.id} className={track.inOtherList ? \"table-warning\" : null}>\n                                        <td>{track.index}</td>\n                                        <td>{track.name}</td>\n                                        <td>{track.artist}</td>\n                                    </tr>\n                                )\n                            })\n                            : null\n                    }\n                </tbody>\n            </Table>\n        </Fragment>\n    )\n\n}\n","import {useSearchParams} from \"react-router-dom\";\nimport {Fragment, useEffect, useState} from \"react\";\nimport {PlaylistTable} from \"../../components/playlistTable\";\nimport axios from \"axios\";\nimport JSConfetti from \"js-confetti\";\nimport \"./comparison.css\";\nimport {Button} from \"react-bootstrap\";\nimport {useNavigate} from \"react-router-dom\";\n\nexport default function Comparison() {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [selectedPlaylists, setSelectedPlaylists] = useState({});\n    const [playlist1, setPlaylist1] = useState();\n    const [playlist2, setPlaylist2] = useState();\n    const [stats, setStats] = useState();\n    const [loading, setLoading] = useState(true);\n\n    const confetti = new JSConfetti();\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        setSelectedPlaylists({p1: searchParams.get(\"p1\"), p2: searchParams.get(\"p2\")});\n\n    }, [searchParams]);\n\n    useEffect(() => {\n        if (selectedPlaylists.p1 === undefined || selectedPlaylists.p2 === undefined) return;\n        const getComparisonResult = async () => {\n            axios.get(`/api/app/playlistComparison?p1=${selectedPlaylists.p1}&p2=${selectedPlaylists.p2}`)\n                .then(data => {\n                    console.log(data);\n                    setPlaylist1(data.data.playlist1);\n                    setPlaylist2(data.data.playlist2);\n                    setStats(data.data.stats);\n                    setLoading(false);\n                    confetti.addConfetti({\n                        confettiRadius: 6,\n                        confettiNumber: 500,\n                    });\n                })\n        }\n\n        getComparisonResult();\n    }, [selectedPlaylists]);\n\n    const resetClickHandler = (event) => {\n      event.preventDefault();\n      navigate(\"/\");\n    }\n\n    return (\n        <div className=\"App\">\n            {loading ? null :\n                <Fragment>\n                    <h1>The results are in!</h1>\n                    <h2>{stats ? `${stats.sameSongs} songs are on both of these lists` : null}</h2>\n                    <Button variant=\"primary\" onClick={resetClickHandler}>Back to the beginning!</Button>\n                    <div className=\"table-container\">\n                        <PlaylistTable playlistData={playlist1}/>\n                        <PlaylistTable playlistData={playlist2}/>\n                    </div>\n                </Fragment>\n            }\n        </div>\n    )\n}\n","import {Link} from \"react-router-dom\";\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1>Page not Found!</h1>\n            <Link to=\"/\">Go Home</Link>\n        </div>\n    )\n}\n","import './App.css';\nimport React from \"react\";\n\n\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route\n} from \"react-router-dom\";\n\nimport Login from \"./views/login/Login\";\nimport PlaylistChoice from \"./views/playlistChoice/PlaylistChoice\";\nimport Comparison from \"./views/comparison/Comparison\";\nimport NotFound from \"./views/notFound/NotFound\";\n\nfunction App() {\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<Login/>}/>\n                <Route path=\"/playlistChoice\" element={<PlaylistChoice/>}/>\n                <Route path=\"/compare\" element={<Comparison/>}/>\n                <Route path=\"*\" element={<NotFound/>}/>\n            </Routes>\n        </Router>\n    )\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}